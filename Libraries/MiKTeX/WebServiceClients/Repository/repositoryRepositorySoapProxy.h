/* repositoryRepositorySoapProxy.h
   Generated by gSOAP 2.7.6e from Repository.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef repositoryRepositorySoapProxy_H
#define repositoryRepositorySoapProxy_H
#include "repositoryH.h"

class SOAP_CMAC RepositorySoapProxy : public soap
{ public:
		RepositorySoapProxy();
		RepositorySoapProxy(soap_mode iomode);
		RepositorySoapProxy(soap_mode imode, soap_mode omode);
	virtual ~RepositorySoapProxy();
	virtual	void RepositorySoapProxy_init(soap_mode imode, soap_mode omode);
	virtual int TryGetRepositoryInfo(_mws__TryGetRepositoryInfo *mws__TryGetRepositoryInfo, _mws__TryGetRepositoryInfoResponse *mws__TryGetRepositoryInfoResponse);
	virtual int PickRepository(_mws__PickRepository *mws__PickRepository, _mws__PickRepositoryResponse *mws__PickRepositoryResponse);
	virtual int GetAllRepositories(_mws__GetAllRepositories *mws__GetAllRepositories, _mws__GetAllRepositoriesResponse *mws__GetAllRepositoriesResponse);
	virtual int GetRepositories(_mws__GetRepositories *mws__GetRepositories, _mws__GetRepositoriesResponse *mws__GetRepositoriesResponse);
	virtual int TryGetRepositoryInfo_(_mws__TryGetRepositoryInfo *mws__TryGetRepositoryInfo, _mws__TryGetRepositoryInfoResponse *mws__TryGetRepositoryInfoResponse);
	virtual int PickRepository_(_mws__PickRepository *mws__PickRepository, _mws__PickRepositoryResponse *mws__PickRepositoryResponse);
	virtual int GetAllRepositories_(_mws__GetAllRepositories *mws__GetAllRepositories, _mws__GetAllRepositoriesResponse *mws__GetAllRepositoriesResponse);
	virtual int GetRepositories_(_mws__GetRepositories *mws__GetRepositories, _mws__GetRepositoriesResponse *mws__GetRepositoriesResponse);
		const char *soap_endpoint;
};
#endif
